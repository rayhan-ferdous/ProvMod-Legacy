<crhm>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::PrjOpenClick(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::DoPrjOpen(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::ObsCloseClick(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::ObsCloseClick(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<bool__fastcallTMain::FileExistsSp(StringFileName) @@@ CRHMmain.cpp_nocom>
</bool__fastcallTMain::FileExistsSp(StringFileName) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
<voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
</void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
</voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
</void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
</voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::UpdateDim(CRHM::TDimDim,longdim) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMMainUpdateDim(TMessage&Message) @@@ CRHMmain.cpp_nocom>
</void__fastcallUpdate_Main_DIM(CRHM::TDimDim,longdim) @@@ ClassCRHM.cpp_nocom>
</voidsetdim(stringname,longdim) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::MacroLoad(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::ClearModules(TObject*Sender,boolAll) @@@ CRHMmain.cpp_nocom>
<voidModVarRemove(MapVar&MapVars) @@@ ClassCRHM.cpp_nocom>
</voidModVarRemove(MapVar&MapVars) @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::ClearModules(TObject*Sender,boolAll) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::MacroLoad(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::ResetPickers(void) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::ResetPickers(void) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::CheckforModule(StringS,longPos) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::CheckforModule(StringS,longPos) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::CheckforModule(StringS,longPos) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::CheckforModule(StringS,longPos) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::InitModules(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<voidClassbasin::decl(void) @@@ NewModules.cpp_nocom>
<voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**ivalue,constlong***ilayvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</voidClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constlong**value,constlong***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,long**ivalue,long***ilayvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,long**ivalue,long***ilayvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</longgetdim(CRHM::TDimdimen) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringCommaText,stringhelp,CRHM::TVarvarType,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),help(help),units(),valstr(),minVal(0),maxVal(0),Inhibit_share(0),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Identical(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</TStringList*ClassModule::declparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</TStringList*ClassModule::decldiagparam(stringparam,CRHM::TDimdimen,stringTexts,stringhelp,TStringList*StringsList,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</voidClassbasin::decl(void) @@@ NewModules.cpp_nocom>
<voidClassglobal::decl(void) @@@ NewModules.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnitK(Tresult&u,doublek) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::PowUnit(Tresult&u,charnPow) @@@ ClassCRHM.cpp_nocom>
<doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</doubleConvert::quickPow(doublek,intnPow) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsinc(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::MulUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
<stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSkipSpaces(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<voidConvert::DivUnit(Tresult&u1,constTresult&u2) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</ClassVar::ClassVar(stringmodule,stringname,CRHM::TDimdimen,stringhelp,stringunits,CRHM::TVarvarType,boolPointPlot,intGrpdim,intdefdim):module(module),name(name),DLLName(),root(),varType(varType),lay(0),nfreq(false),optional(false),StatVar(false),InGroup(0),visibility(CRHM::USUAL),FunKind(CRHM::FOBS),help(help),units(units),layvalues(NULL),ilayvalues(NULL),dim(0),dimMax(0),values(NULL),ivalues(NULL),offset(0),cnt(0),FileData(NULL),HRU_OBS_indexed(0),UserFunct(NULL),FunctVar(NULL),CustomFunct(NULL),No_ReadVar(0),PointPlot(PointPlot),TchrtOpt(0),dimen(dimen) @@@ ClassCRHM.cpp_nocom>
</voidClassModule::declvar(stringvariable,CRHM::TDimdimen,stringhelp,stringunits,float**value,float***layvalue,constintdim,boolPointPlot,boolStatVar,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
<boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
</boolClassModule::Variation_Skip(void) @@@ ClassModule.cpp_nocom>
<Convert::Convert() @@@ ClassCRHM.cpp_nocom>
</Convert::Convert() @@@ ClassCRHM.cpp_nocom>
<voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</stringtcsSqueeze(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
<intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
</intConvert::LookupUnit(stringpszIn) @@@ ClassCRHM.cpp_nocom>
<voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</voidConvert::SetBasicUnit(Tresult&u,doublek,intiUnit) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::ExpandUnitExpr(Tresult&u,doublek,stringpszExpr) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase2(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseUnitPhase1(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParsePowUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseMulUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</stringConvert::ParseDivUnitExpr(stringpszIn,Tresult&u) @@@ ClassCRHM.cpp_nocom>
</voidConvert::CheckUnitsString(stringName,stringvariable,stringunits) @@@ ClassCRHM.cpp_nocom>
<voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
</voidClassModule::AKAhook(TAKAtype,stringmodule,stringOrgName,string&NewName) @@@ ClassModule.cpp_nocom>
<ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(stringmodule,stringparam,CRHM::TDimdimen,stringvalstr,floatminVal,floatmaxVal,stringhelp,stringunits,CRHM::TVarvarType,intdefdim,intGrpdim):module(module),basemodule(),param(param),varType(varType),dimen(dimen),valstr(valstr),minVal(minVal),maxVal(maxVal),Inhibit_share(0),help(help),units(units),values(NULL),ivalues(NULL),layvalues(NULL),ilayvalues(NULL),Strings(NULL),layvaluesBkup(NULL),ilayvaluesBkup(NULL),Identical(NULL),StringsBkup(NULL),lay(1) @@@ ClassCRHM.cpp_nocom>
<Myparser::Myparser() @@@ ClassModule.cpp_nocom>
</Myparser::Myparser() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
<voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::get_token() @@@ ClassModule.cpp_nocom>
</voidMyparser::atom(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp6(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp5(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp4(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp3(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp2(float&result) @@@ ClassModule.cpp_nocom>
</voidMyparser::eval_exp(ClassPar*Par) @@@ ClassModule.cpp_nocom>
</voidClassModule::declparam(stringparam,CRHM::TDimdimen,stringvalstr,stringminstr,stringmaxstr,stringhelp,stringunits,constfloat**value,constfloat***layvalue,constintdim,CRHM::TVISIBLELocal) @@@ ClassModule.cpp_nocom>
</voidClassglobal::decl(void) @@@ NewModules.cpp_nocom>
<void__fastcallTMain::Label4Click(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::WMGetMinMaxInfo(TWMGetMinMaxInfo&Msg) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
</boolTMain::Variation_Decide(intVariation_set,longVariation) @@@ CRHMmain.cpp_nocom>
<String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
</String__fastcallTMain::DeclObsName(ClassVar*thisVar) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::Label4Click(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::InitModules(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::SetSharedParams(ClassPar*basinPar) @@@ CRHMmain.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</voidClassPar::Change(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<void__fastcallLogError(CRHMExceptionExcept) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTLogForm::WMLogException(TMessage&Message) @@@ Log.cpp_nocom>
<void__fastcallTLogForm::LogError(CRHMExceptionExcept) @@@ Log.cpp_nocom>
</void__fastcallTLogForm::LogError(CRHMExceptionExcept) @@@ Log.cpp_nocom>
</void__fastcallTLogForm::WMLogException(TMessage&Message) @@@ Log.cpp_nocom>
</void__fastcallLogError(CRHMExceptionExcept) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<void__fastcallLogError(CRHMExceptionExcept) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTLogForm::WMLogException(TMessage&Message) @@@ Log.cpp_nocom>
<void__fastcallTLogForm::LogError(CRHMExceptionExcept) @@@ Log.cpp_nocom>
</void__fastcallTLogForm::LogError(CRHMExceptionExcept) @@@ Log.cpp_nocom>
</void__fastcallTLogForm::WMLogException(TMessage&Message) @@@ Log.cpp_nocom>
</void__fastcallLogError(CRHMExceptionExcept) @@@ ClassCRHM.cpp_nocom>
<ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
</ClassPar*ClassParFind(stringmodule,stringparam) @@@ ClassCRHM.cpp_nocom>
<ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</ClassPar::ClassPar(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</voidClassParSet(ClassPar*p) @@@ ClassCRHM.cpp_nocom>
<void__fastcallTMain::SqueezeParams(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
<boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
</boolClassPar::Same(ClassPar&p) @@@ ClassCRHM.cpp_nocom>
<__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</__fastcallClassPar::~ClassPar() @@@ ClassCRHM.cpp_nocom>
</void__fastcallTMain::SqueezeParams(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<ClassVar*ClassVarFind(stringname) @@@ ClassCRHM.cpp_nocom>
</ClassVar*ClassVarFind(stringname) @@@ ClassCRHM.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
<long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</long__fastcallTMain::IndexOf(TListBox*Box,constAnsiStringS) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::DoPrjOpen(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::PrjOpenClick(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
<void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</void__fastcallTMain::OnHint(TObject*Sender) @@@ CRHMmain.cpp_nocom>
</crhm>
